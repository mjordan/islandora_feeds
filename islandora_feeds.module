<?php

/**
 * Implements hook_feeds_plugins().
 */
function islandora_feeds_feeds_plugins() {
  $info = array();
  $info['IslandoraFeedsFeedsNodeProcessor'] = array(
    'name' => 'Islandora Feeds node processor',
    'description' => 'Creates Islandora objects. Corresponding nodes are not created.',
    'handler' => array(
      'parent' => 'FeedsProcessor',
      'class' => 'IslandoraFeedsFeedsNodeProcessor',
      'file' => 'IslandoraFeedsFeedsNodeProcessor.inc',
      'path' => drupal_get_path('module', 'islandora_feeds'),
    ),
  );
  return $info;
}

/**
 * Implements hook_theme().
 */
function islandora_feeds_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_feeds_item' => array(
      'template' => 'theme/item',
      'pattern' => 'islandora_feeds__',
      'variables' => array('islandora_object' => NULL),
    )
  );
}

/**
 * Implements hook_preprocess_theme().
 */
function islandora_feeds_preprocess_islandora_feeds_item(array &$variables) {
  $islandora_object = $variables['islandora_object'];
  if (isset($islandora_object['ISLANDORA_STUB'])) {
    $variables['islandora_content'] = htmlspecialchars($islandora_object['ISLANDORA_STUB']->content);
  }
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_feeds_islandora_feedsCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_feeds_item', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_action_info().
 *
 * @todo: This action ingests Islandora objects at a point later
 * in time than the Feed import, so we need to store the target
 * collection and content model. Do we require the user to create
 * fields with a specific name in their template content type?
 */
function islandora_feeds_action_info() {
  return array(
    'islandora_feeds_create_islandora_objects_action' => array(
      'type' => 'node',
      'label' => t('Create Islandora objects from nodes'),
      'configurable' => FALSE,
      'vbo_configurable' => TRUE,
      'pass rows' => TRUE,
      'triggers' => array('any'),
    ),
  );
}

/**
 * Form to configure the 'Create Islandora objects from nodes' action.
 */
function islandora_feeds_create_islandora_objects_action_form($context) {
  $types = node_type_get_types();
  $types_options = array();
  foreach ($types as $type => $properties) {
    $types_options[$type] = $properties->name;
  }
  $form['bundle'] = array(
    '#type' => 'select',
    '#title' => t('Bundle'),
    '#options' => $types_options,
    '#description' => t("The content type bundle that the objects will be created from."),
    '#required' => TRUE,
  );
  module_load_include('inc', 'islandora_feeds', 'includes/utilities');
  $collections = islandora_feeds_get_collections_or_content_models('collections');
  $form['collection'] = array(
    '#type' => 'select',
    '#title' => t('Target collection'),
    '#options' => $collections,
    '#description' => t("The Islandora collection you want to import into."),
    '#required' => TRUE,
  );
  $cmodels = islandora_feeds_get_collections_or_content_models('cmodels');
  $form['cmodel'] = array(
    '#type' => 'select',
    '#title' => t('Target content model'),
    '#options' => $cmodels,
    '#default_value' => 'islandora:feedsCModel',
    '#description' => t("The Islandora content model you want to import into."),
    '#required' => TRUE,
  );
  $form['namespace'] = array(
      '#type' => 'textfield',
      '#title' => t('Namespace'),
      '#description' => t('The PID namespace to use for the imported objects.'),
      '#required' => TRUE,
  );
  $form['dslabel'] = array(
    '#type' => 'textfield',
    '#title' => t('Datastream label'),
    '#description' => t('Label of the XML datastream that will hold the imported content. The datastream ID will be the same as the machine name of the bundle you select above.'),
     '#required' => TRUE,
  );
  $author = user_load_by_name('admin');
  $form['author'] = array(
    '#type' => 'textfield',
    '#title' => t('Author'),
    '#description' => t('Select the author of the nodes to be created - leave empty to assign "anonymous".'),
    '#autocomplete_path' => 'user/autocomplete',
    '#default_value' => empty($author->name) ? 'anonymous' : check_plain($author->name),
  );
  return $form;
}

/**
 * Custom action. Fired from Views Bulk Operations.
 */
function islandora_feeds_create_islandora_objects_action($object, $context) {
  module_load_include('inc', 'islandora_feeds', 'includes/utilities');
  // islandora_feeds_ingest_object($entity, $item, $namespace, $dsid, $ds_label, $xml_ds, $cmodel, $collection);
}

/**
 * Action submit function.
 */
function islandora_feeds_create_islandora_objects_action_submit($form, $form_state) {
  return array(
    'bundle' => $form_state['values']['bundle'],
    'collection' => $form_state['values']['collection'],
    'cmodel' => $form_state['values']['cmodel'],
    'dslabel' => $form_state['values']['dslabel'],
    'author' => $form_state['values']['author'],
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_feeds_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_feeds');
  $islandora_path = drupal_get_path('module', 'islandora');

  $islandora_feeds_content_model = $connection->repository->constructObject('islandora:feedsCModel');
  $islandora_feeds_content_model->owner = 'fedoraAdmin';
  $islandora_feeds_content_model->label = 'Islandora Feeds Content Model';
  $islandora_feeds_content_model->models = 'fedora-system:ContentModel-3.0';

  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $islandora_feeds_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_feeds_ds_composite_model.xml", FALSE);
  $islandora_feeds_content_model->ingestDatastream($datastream);
  return array(
    'islandora_feeds' => array(
      'title' => 'Islandora Feeds',
      'objects' => array(
        $islandora_feeds_content_model,
      ),
    ),
  );
}

